<?xml version="1.0" ?>
<!--
  Copyright (C) 2020  Rhys Mainwaring

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <https://www.gnu.org/licenses/>.
-->
<sdf version="1.6">
    <!-- Generated from rs750_description

      rosrun xacro xacro -o rs750.urdf rs750.urdf.xacro
      gz sdf -p rs750.urdf > rs750.sdf    

      Custom edits:

      1. Media location
        replace:  model://rs750_description/meshes
        with:     model://rs750/meshes

      2. Disable ROS plugins

      3. Add ArduPilot plugins

      4. Rotate imu sensor PI about x

    -->
    <model name='rs750'>
        <link name='base_link'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <inertial>
            <pose frame=''>-0.150492 0 -0.613518 0 -0 0</pose>
            <mass>75.3884</mass>
            <inertia>
              <ixx>22.9499</ixx>
              <ixy>0</ixy>
              <ixz>-5.37165</ixz>
              <iyy>41.8716</iyy>
              <iyz>0</iyz>
              <izz>20.229</izz>
            </inertia>
          </inertial>
          <collision name='base_link_collision'>
            <pose frame=''>0 0 0 0 -0 0</pose>
            <geometry>
              <box>
                <size>0.01 0.01 0.01</size>
              </box>
            </geometry>
            <surface>
              <contact>
                <ode/>
              </contact>
              <friction>
                <ode/>
              </friction>
            </surface>
          </collision>
          <collision name='base_link_fixed_joint_lump__anemometer_link_collision_1'>
            <pose frame=''>0 0 4 0 -0 0</pose>
            <geometry>
              <cylinder>
                <length>0.05</length>
                <radius>0.02</radius>
              </cylinder>
            </geometry>
            <surface>
              <contact>
                <ode/>
              </contact>
              <friction>
                <ode/>
              </friction>
            </surface>
          </collision>
          <collision name='base_link_fixed_joint_lump__camera_link_collision_2'>
            <pose frame=''>0.5 0 0.3 0 -0 0</pose>
            <geometry>
              <box>
                <size>0.031 0.026 0.005</size>
              </box>
            </geometry>
            <surface>
              <contact>
                <ode/>
              </contact>
              <friction>
                <ode/>
              </friction>
            </surface>
          </collision>
          <collision name='base_link_fixed_joint_lump__hull_link_collision_3'>
            <pose frame=''>0 0 0 0 -0 0</pose>
            <geometry>
              <mesh>
                <scale>1 1 1</scale>
                <uri>model://rs750/meshes/rs750_hull_collision_3.stl</uri>
              </mesh>
            </geometry>
            <surface>
              <contact>
                <ode/>
              </contact>
              <friction>
                <ode/>
              </friction>
            </surface>
          </collision>
          <collision name='base_link_fixed_joint_lump__imu_link_collision_4'>
            <pose frame=''>0 0 0.01 0 -0 0</pose>
            <geometry>
              <box>
                <size>0.031 0.026 0.005</size>
              </box>
            </geometry>
            <surface>
              <contact>
                <ode/>
              </contact>
              <friction>
                <ode/>
              </friction>
            </surface>
          </collision>
          <collision name='base_link_fixed_joint_lump__keel_bulb_link_collision_5'>
            <pose frame=''>-0.26638 0 -1.08674 3.14159 1.57079 3.14159</pose>
            <geometry>
              <cylinder>
                <length>0.688</length>
                <radius>0.048</radius>
              </cylinder>
            </geometry>
            <surface>
              <contact>
                <ode/>
              </contact>
              <friction>
                <ode/>
              </friction>
            </surface>
          </collision>
          <collision name='base_link_fixed_joint_lump__magnetic_link_collision_6'>
            <pose frame=''>0 0 0.01 0 -0 0</pose>
            <geometry>
              <box>
                <size>0.031 0.026 0.005</size>
              </box>
            </geometry>
          </collision>
          <visual name='base_link_visual'>
            <pose frame=''>0 0 0 0 -0 0</pose>
            <geometry>
              <box>
                <size>0.01 0.01 0.01</size>
              </box>
            </geometry>
            <material>
              <script>
                <name>Gazebo/Orange</name>
                <uri>file://media/materials/scripts/gazebo.material</uri>
              </script>
            </material>
          </visual>
          <visual name='base_link_fixed_joint_lump__anemometer_link_visual_1'>
            <pose frame=''>0 0 4 0 -0 0</pose>
            <geometry>
              <cylinder>
                <length>0.05</length>
                <radius>0.02</radius>
              </cylinder>
            </geometry>
            <material>
              <script>
                <name>Gazebo/Green</name>
                <uri>file://media/materials/scripts/gazebo.material</uri>
              </script>
            </material>
          </visual>
          <visual name='base_link_fixed_joint_lump__camera_link_visual_2'>
            <pose frame=''>0.5 0 0.3 0 -0 0</pose>
            <geometry>
              <box>
                <size>0.031 0.026 0.005</size>
              </box>
            </geometry>
            <material>
              <script>
                <name>Gazebo/Green</name>
                <uri>file://media/materials/scripts/gazebo.material</uri>
              </script>
            </material>
          </visual>
          <visual name='base_link_fixed_joint_lump__deck_link_visual_3'>
            <pose frame=''>0 0 0 0 -0 0</pose>
            <geometry>
              <mesh>
                <scale>1 1 1</scale>
                <uri>model://rs750/meshes/rs750_deck.stl</uri>
              </mesh>
            </geometry>
            <material>
              <script>
                <name>Gazebo/Gray</name>
                <uri>file://media/materials/scripts/gazebo.material</uri>
              </script>
            </material>
          </visual>
          <visual name='base_link_fixed_joint_lump__hull_link_visual_4'>
            <pose frame=''>0 0 0 0 -0 0</pose>
            <geometry>
              <mesh>
                <scale>1 1 1</scale>
                <uri>model://rs750/meshes/rs750_hull.stl</uri>
              </mesh>
            </geometry>
            <material>
              <script>
                <name>Gazebo/Red</name>
                <uri>file://media/materials/scripts/gazebo.material</uri>
              </script>
            </material>
          </visual>
          <visual name='base_link_fixed_joint_lump__imu_link_visual_5'>
            <pose frame=''>0 0 0.01 0 -0 0</pose>
            <geometry>
              <box>
                <size>0.031 0.026 0.005</size>
              </box>
            </geometry>
            <material>
              <script>
                <name>Gazebo/Green</name>
                <uri>file://media/materials/scripts/gazebo.material</uri>
              </script>
            </material>
          </visual>
          <visual name='base_link_fixed_joint_lump__keel_bulb_link_visual_6'>
            <pose frame=''>-0.26638 0 -1.08674 0 -0 0</pose>
            <geometry>
              <mesh>
                <scale>1 1 1</scale>
                <uri>model://rs750/meshes/rs750_keel_bulb.stl</uri>
              </mesh>
            </geometry>
            <material>
              <script>
                <name>Gazebo/Yellow</name>
                <uri>file://media/materials/scripts/gazebo.material</uri>
              </script>
            </material>
          </visual>
          <visual name='base_link_fixed_joint_lump__magnetic_link_visual_7'>
            <pose frame=''>0 0 0.01 0 -0 0</pose>
            <geometry>
              <box>
                <size>0.031 0.026 0.005</size>
              </box>
            </geometry>
          </visual>
          <visual name='base_link_fixed_joint_lump__mast_link_visual_8'>
            <pose frame=''>0 0 2.09 0 -0 0</pose>
            <geometry>
              <mesh>
                <scale>1 1 1</scale>
                <uri>model://rs750/meshes/rs750_mast.stl</uri>
              </mesh>
            </geometry>
            <material>
              <script>
                <name>Gazebo/Black</name>
                <uri>file://media/materials/scripts/gazebo.material</uri>
              </script>
            </material>
          </visual>
          <velocity_decay/>
          <velocity_decay/>
          <sensor name='anemometer_sensor' type='anemometer'>
            <always_on>1</always_on>
            <update_rate>50</update_rate>
            <visualize>1</visualize>
            <topic>sensors/anemometer</topic>
            <!-- <plugin name='anemometer_plugin' filename='libgazebo_ros_anemometer.so'>
              <robotNamespace>/</robotNamespace>
              <frameId>anemometer_link</frameId>
              <topicName>wind/apparent</topicName>
            </plugin> -->
            <pose frame=''>0 0 4 0 -0 0</pose>
          </sensor>
          <velocity_decay/>
          <sensor name='camera' type='camera'>
            <always_on>1</always_on>
            <update_rate>30</update_rate>
            <camera name='camera'>
              <horizontal_fov>1.047</horizontal_fov>
              <image>
                <width>800</width>
                <height>800</height>
                <format>R8G8B8</format>
              </image>
              <clip>
                <near>0.02</near>
                <far>300</far>
              </clip>
            </camera>
            <!-- <plugin name='camera_plugin' filename='libgazebo_ros_camera.so'>
              <alwaysOn>1</alwaysOn>
              <updateRate>0.0</updateRate>
              <cameraName>camera</cameraName>
              <imageTopicName>rgb/image_raw</imageTopicName>
              <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
              <frameName>camera_link_optical</frameName>
              <hackBaseline>0.07</hackBaseline>
              <distortionK1>0.0</distortionK1>
              <distortionK2>0.0</distortionK2>
              <distortionK3>0.0</distortionK3>
              <distortionT1>0.0</distortionT1>
              <distortionT2>0.0</distortionT2>
            </plugin> -->
            <pose frame=''>0.5 0 0.3 0 -0 0</pose>
          </sensor>
          <velocity_decay/>
          <velocity_decay/>
          <velocity_decay/>
          <sensor name='imu_sensor' type='imu'>
            <pose>0 0 0 3.141593 0 0</pose>
            <always_on>1</always_on>
            <update_rate>1000</update_rate>
            <visualize>1</visualize>
            <topic>sensors/imu</topic>
            <imu>
              <topic>sensors/imu</topic>
              <angular_velocity/>
              <linear_acceleration/>
            </imu>
            <!-- <plugin name='imu_plugin' filename='libgazebo_ros_imu_sensor.so'>
              <gaussianNoise>0.0</gaussianNoise>
              <always_on>1</always_on>
              <updateRateHZ>50</updateRateHZ>
              <topicName>sensors/imu</topicName>
              <bodyName>imu_link</bodyName>
              <frameName>imu_link</frameName>
              <xyzOffset>0 0 0</xyzOffset>
              <rpyOffset>0 0 0</rpyOffset>
            </plugin> -->
            <pose frame=''>0 0 0.01 0 -0 0</pose>
          </sensor>
          <velocity_decay/>
          <gravity>1</gravity>
          <velocity_decay/>
        </link>
        <link name='fore_sail_link'>
          <pose frame=''>1.03125 0 0.235625 0 -0 0</pose>
          <inertial>
            <pose frame=''>0 0 0 0 -0 0</pose>
            <mass>1.6384</mass>
            <inertia>
              <ixx>0.68512</ixx>
              <ixy>0</ixy>
              <ixz>0</ixz>
              <iyy>0.699051</iyy>
              <iyz>0</iyz>
              <izz>0.0140313</izz>
            </inertia>
          </inertial>
          <collision name='fore_sail_link_collision'>
            <pose frame=''>0 0 0 0 -0 0</pose>
            <geometry>
              <mesh>
                <scale>1 1 1</scale>
                <uri>model://rs750/meshes/rs750_fore_sail.stl</uri>
              </mesh>
            </geometry>
            <surface>
              <contact>
                <ode/>
              </contact>
              <friction>
                <ode/>
              </friction>
            </surface>
          </collision>
          <visual name='fore_sail_link_visual'>
            <pose frame=''>0 0 0 0 -0 0</pose>
            <geometry>
              <mesh>
                <scale>1 1 1</scale>
                <uri>model://rs750/meshes/rs750_fore_sail.stl</uri>
              </mesh>
            </geometry>
            <material>
              <script>
                <name>Gazebo/GreyTransparent</name>
                <uri>file://media/materials/scripts/gazebo.material</uri>
              </script>
            </material>
          </visual>
          <gravity>1</gravity>
          <velocity_decay/>
        </link>
        <joint name='fore_sail_joint' type='revolute'>
          <child>fore_sail_link</child>
          <parent>base_link</parent>
          <axis>
            <xyz>-0.271653 0 0.962395</xyz>
            <limit>
              <!-- <lower>-1.5708</lower>
              <upper>1.5708</upper> -->
              <lower>-1.39626</lower>
              <upper>1.39626</upper>
              <effort>1000</effort>
              <velocity>1000</velocity>
            </limit>
            <dynamics>
              <spring_reference>0</spring_reference>
              <spring_stiffness>0</spring_stiffness>
            </dynamics>
            <use_parent_model_frame>1</use_parent_model_frame>
          </axis>
          <physics>
            <provide_feedback>1</provide_feedback>
            <ode>
              <provide_feedback>1</provide_feedback>
              <limit>
                <cfm>0</cfm>
                <erp>0.2</erp>
              </limit>
            </ode>
          </physics>
        </joint>
        <link name='keel_fin_link'>
          <pose frame=''>-0.16255 0 -0.54053 0 -0 0</pose>
          <inertial>
            <pose frame=''>0 0 0 0 -0 0</pose>
            <mass>8.192</mass>
            <inertia>
              <ixx>0.50986</ixx>
              <ixy>0</ixy>
              <ixz>0</ixz>
              <iyy>0.520793</iyy>
              <iyz>0</iyz>
              <izz>0.0114365</izz>
            </inertia>
          </inertial>
          <collision name='keel_fin_link_collision'>
            <pose frame=''>0 0 0 0 -0 0</pose>
            <geometry>
              <mesh>
                <scale>1 1 1</scale>
                <uri>model://rs750/meshes/rs750_keel_fin_collision_2.stl</uri>
              </mesh>
            </geometry>
            <surface>
              <contact>
                <ode/>
              </contact>
              <friction>
                <ode/>
              </friction>
            </surface>
          </collision>
          <visual name='keel_fin_link_visual'>
            <pose frame=''>0 0 0 0 -0 0</pose>
            <geometry>
              <mesh>
                <scale>1 1 1</scale>
                <uri>model://rs750/meshes/rs750_keel_fin.stl</uri>
              </mesh>
            </geometry>
            <material>
              <script>
                <name>Gazebo/Yellow</name>
                <uri>file://media/materials/scripts/gazebo.material</uri>
              </script>
            </material>
          </visual>
          <gravity>1</gravity>
          <velocity_decay/>
        </link>
        <joint name='keel_fin_joint' type='fixed'>
          <child>keel_fin_link</child>
          <parent>base_link</parent>
          <axis>
            <dynamics>
              <spring_reference>0</spring_reference>
              <spring_stiffness>0</spring_stiffness>
            </dynamics>
            <use_parent_model_frame>1</use_parent_model_frame>
            <xyz>0 0 1</xyz>
            <limit>
              <lower>-1e+16</lower>
              <upper>1e+16</upper>
            </limit>
          </axis>
          <physics>
            <ode>
              <limit>
                <cfm>0</cfm>
                <erp>0.2</erp>
              </limit>
            </ode>
          </physics>
        </joint>
        <link name='main_sail_link'>
          <pose frame=''>-0.02625 0 0.291875 0 -0 0</pose>
          <inertial>
            <pose frame=''>0 0 0 0 -0 0</pose>
            <mass>3.2768</mass>
            <inertia>
              <ixx>2.26502</ixx>
              <ixy>0</ixy>
              <ixz>0</ixz>
              <iyy>2.37677</iyy>
              <iyz>0</iyz>
              <izz>0.111949</izz>
            </inertia>
          </inertial>
          <collision name='main_sail_link_collision'>
            <pose frame=''>0 0 0 0 -0 0</pose>
            <geometry>
              <mesh>
                <scale>1 1 1</scale>
                <uri>model://rs750/meshes/rs750_main_sail.stl</uri>
              </mesh>
            </geometry>
            <surface>
              <contact>
                <ode/>
              </contact>
              <friction>
                <ode/>
              </friction>
            </surface>
          </collision>
          <visual name='main_sail_link_visual'>
            <pose frame=''>0 0 0 0 -0 0</pose>
            <geometry>
              <mesh>
                <scale>1 1 1</scale>
                <uri>model://rs750/meshes/rs750_main_sail.stl</uri>
              </mesh>
            </geometry>
            <material>
              <script>
                <name>Gazebo/GreyTransparent</name>
                <uri>file://media/materials/scripts/gazebo.material</uri>
              </script>
            </material>
          </visual>
          <gravity>1</gravity>
          <velocity_decay/>
        </link>
        <joint name='main_sail_joint' type='revolute'>
          <child>main_sail_link</child>
          <parent>base_link</parent>
          <axis>
            <xyz>0 0 1</xyz>
            <limit>
              <!-- <lower>-1.5708</lower>
              <upper>1.5708</upper> -->
              <lower>-1.39626</lower>
              <upper>1.39626</upper>
              <effort>1000</effort>
              <velocity>1000</velocity>
            </limit>
            <dynamics>
              <spring_reference>0</spring_reference>
              <spring_stiffness>0</spring_stiffness>
            </dynamics>
            <use_parent_model_frame>1</use_parent_model_frame>
          </axis>
          <physics>
            <provide_feedback>1</provide_feedback>
            <ode>
              <provide_feedback>1</provide_feedback>
              <limit>
                <cfm>0</cfm>
                <erp>0.2</erp>
              </limit>
            </ode>
          </physics>
        </joint>
        <link name='rudder_link'>
          <pose frame=''>-1.2436 0 -0.0487 0 -0 0</pose>
          <inertial>
            <pose frame=''>0 0 0 0 -0 0</pose>
            <mass>3.2768</mass>
            <inertia>
              <ixx>0.0716835</ixx>
              <ixy>0</ixy>
              <ixz>0</ixz>
              <iyy>0.0760567</iyy>
              <iyz>0</iyz>
              <izz>0.00457459</izz>
            </inertia>
          </inertial>
          <collision name='rudder_link_collision'>
            <pose frame=''>0 0 0 0 -0 0</pose>
            <geometry>
              <mesh>
                <scale>1 1 1</scale>
                <uri>model://rs750/meshes/rs750_rudder_collision_3.stl</uri>
              </mesh>
            </geometry>
            <surface>
              <contact>
                <ode/>
              </contact>
              <friction>
                <ode/>
              </friction>
            </surface>
          </collision>
          <visual name='rudder_link_visual'>
            <pose frame=''>0 0 0 0 -0 0</pose>
            <geometry>
              <mesh>
                <scale>1 1 1</scale>
                <uri>model://rs750/meshes/rs750_rudder.stl</uri>
              </mesh>
            </geometry>
            <material>
              <script>
                <name>Gazebo/Yellow</name>
                <uri>file://media/materials/scripts/gazebo.material</uri>
              </script>
            </material>
          </visual>
          <gravity>1</gravity>
          <velocity_decay/>
        </link>
        <joint name='rudder_joint' type='revolute'>
          <child>rudder_link</child>
          <parent>base_link</parent>
          <axis>
            <xyz>0 0 1</xyz>
            <limit>
              <lower>-1.5708</lower>
              <upper>1.5708</upper>
              <effort>1000</effort>
              <velocity>1000</velocity>
            </limit>
            <dynamics>
              <spring_reference>0</spring_reference>
              <spring_stiffness>0</spring_stiffness>
            </dynamics>
            <use_parent_model_frame>1</use_parent_model_frame>
          </axis>
          <physics>
            <provide_feedback>1</provide_feedback>
            <ode>
              <provide_feedback>1</provide_feedback>
              <limit>
                <cfm>0</cfm>
                <erp>0.2</erp>
              </limit>
            </ode>
          </physics>
        </joint>
        <plugin name='main_sail_liftdrag' filename='libSailPlugin.so'>
          <a0>0.0</a0>
          <cla>6.2832</cla>
          <alpha_stall>0.1592</alpha_stall>
          <cla_stall>-0.7083</cla_stall>
          <cda>0.63662</cda>
          <area>1.81</area>
          <fluid_density>1.2</fluid_density>
          <forward>1 0 0</forward>
          <upward>0 1 0</upward>
          <cp>-0.30875 0 1.30625</cp>
          <link_name>main_sail_link</link_name>
          <radial_symmetry>1</radial_symmetry>
          <topic>lift_drag</topic>
        </plugin>
        <plugin name='fore_sail_liftdrag' filename='libSailPlugin.so'>
          <a0>0.0</a0>
          <cla>6.2832</cla>
          <alpha_stall>0.1592</alpha_stall>
          <cla_stall>-0.7083</cla_stall>
          <cda>0.63662</cda>
          <area>1.43</area>
          <fluid_density>1.2</fluid_density>
          <forward>1 0 0</forward>
          <upward>0 1 0</upward>
          <cp>-0.605666667 0 1.20528</cp>
          <link_name>fore_sail_link</link_name>
          <radial_symmetry>1</radial_symmetry>
          <topic>lift_drag</topic>
        </plugin>
        <!-- <plugin name='gazebo_ros_control' filename='libgazebo_ros_control.so'>
          <robotNamespace>/</robotNamespace>
          <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
          <legacyModeNS>0</legacyModeNS>
        </plugin> -->
        <plugin name='hydrodynamics' filename='libHydrodynamicsPlugin.so'>
          <wave_model>ocean</wave_model>
          <damping_on>1</damping_on>
          <viscous_drag_on>1</viscous_drag_on>
          <pressure_drag_on>1</pressure_drag_on>
          <markers>
            <update_rate>30</update_rate>
            <water_patch>0</water_patch>
            <waterline>0</waterline>
            <underwater_surface>0</underwater_surface>
          </markers>
        </plugin>
        <plugin name='keel_fin_liftdrag' filename='libFoilPlugin.so'>
          <a0>0.0</a0>
          <cla>6.2832</cla>
          <alpha_stall>0.1592</alpha_stall>
          <cla_stall>-0.7083</cla_stall>
          <cda>0.63662</cda>
          <area>0.17</area>
          <fluid_density>1000</fluid_density>
          <forward>1 0 0</forward>
          <upward>0 1 0</upward>
          <cp>0 0 0</cp>
          <link_name>keel_fin_link</link_name>
          <radial_symmetry>1</radial_symmetry>
          <topic>lift_drag</topic>
        </plugin>
        <plugin name='rudder_liftdrag' filename='libFoilPlugin.so'>
          <a0>0.0</a0>
          <cla>6.2832</cla>
          <alpha_stall>0.1592</alpha_stall>
          <cla_stall>-0.7083</cla_stall>
          <cda>0.63662</cda>
          <area>0.12</area>
          <fluid_density>1000</fluid_density>
          <forward>1 0 0</forward>
          <upward>0 1 0</upward>
          <cp>-0.06 0 -0.2</cp>
          <link_name>rudder_link</link_name>
          <radial_symmetry>1</radial_symmetry>
          <topic>lift_drag</topic>
        </plugin>
        <static>0</static>
        <!-- <plugin name='magnetic_plugin' filename='libhector_gazebo_ros_magnetic.so'>
          <updateRate>10.0</updateRate>
          <frameId>magnetic_link</frameId>
          <topicName>sensors/magnetic</topicName>
          <offset>0 0 0</offset>
          <drift>0.0 0.0 0.0</drift>
          <gaussianNoise>1.3e-2 1.3e-2 1.3e-2</gaussianNoise>
          <bodyName>base_link</bodyName>
          <xyzOffset>0 0 -0.01</xyzOffset>
          <rpyOffset>0 -0 0</rpyOffset>
        </plugin> -->
      
        <plugin name="ardupilot_plugin" filename="libArduPilotPlugin.so">
        <!-- MAVLink / port settings -->
        <fdm_addr>127.0.0.1</fdm_addr>
        <fdm_port_in>9002</fdm_port_in>
        <fdm_port_out>9003</fdm_port_out>
        <connectionTimeoutMaxCount>5</connectionTimeoutMaxCount>

        <!-- Coordinate frames required for APM

            Change model and gazebo from XYZ to XY-Z coordinates
        
            Math constants:
              PI   = 3.141592
              PI_2 = 1.570796
              PI_4 = 0.785398
          -->
        <modelXYZToAirplaneXForwardZDown>0 0 0 3.141593 0 0</modelXYZToAirplaneXForwardZDown>
        <gazeboXYZToNED>0 0 0 3.141593 0 0</gazeboXYZToNED>

        <!-- Sensors -->
        <imuName>base_link::imu_sensor</imuName>

        <!-- Control / channels -->

        <!-- SERVO1_FUNCTION 26 (GroundSteering)
             SERVO1_MIN 1000
             SERVO1_MAX 2000

             Input command in [0, 1]
             Target rudder position in [-PI/4, PI/4]
         -->
        <control channel="0">
          <jointName>rudder_joint</jointName>
          <useForce>1</useForce>
          <multiplier>1.570796</multiplier>
          <offset>-0.5</offset>
          <type>POSITION</type>
          <p_gain>10</p_gain>
          <i_gain>0.001</i_gain>
          <d_gain>0</d_gain>
          <i_max>100</i_max>
          <i_min>-100</i_min>
          <cmd_max>1000</cmd_max>
          <cmd_min>-1000</cmd_min>
        </control>

        <!-- SERVO4_FUNCTION 89 (MainSail)
             SERVO4_MIN 1000
             SERVO4_MAX 2000

             Input command in [0, 1]
             Desired sail angle in [0, 80] deg

             If the sails are allowed to sheet out too far 
             the boat will not gybe.
         -->
        <control channel="3">
          <jointName>fore_sail_joint</jointName>
          <useForce>1</useForce>
          <!-- <multiplier>1.570796</multiplier> -->
          <multiplier>1.39626</multiplier>
          <offset>0</offset>
          <type>POSITION_LIMIT</type>
          <p_gain>40</p_gain>
          <i_gain>0.001</i_gain>
          <d_gain>0</d_gain>
          <i_max>100</i_max>
          <i_min>-100</i_min>
          <cmd_max>1000</cmd_max>
          <cmd_min>-1000</cmd_min>
        </control>

        <control channel="3">
          <jointName>main_sail_joint</jointName>
          <useForce>1</useForce>
          <!-- <multiplier>1.570796</multiplier> -->
          <multiplier>1.39626</multiplier>
          <offset>0</offset>
          <type>POSITION_LIMIT</type>
          <p_gain>50</p_gain>
          <i_gain>0.001</i_gain>
          <d_gain>0</d_gain>
          <i_max>100</i_max>
          <i_min>-100</i_min>
          <cmd_max>1000</cmd_max>
          <cmd_min>-1000</cmd_min>
        </control>
      
      </plugin>      

    </model>
</sdf>
