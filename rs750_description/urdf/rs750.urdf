<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from rs750.urdf.xacro               | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- 
  Copyright (C) 2020  Rhys Mainwaring

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <https://www.gnu.org/licenses/>.
-->
<!-- Robot description for a RS750 yacht

    Conventions    
    ROS REP 105 Coordinate Frames for Mobile Platforms
    length      x-axis dimension
    width       y-axis dimension
    depth       z-axis dimension

 -->
<robot name="rs750">
  <material name="red">
    <color rgba="0.8 0 0 1"/>
  </material>
  <material name="green">
    <color rgba="0 0.8 0 1"/>
  </material>
  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>
  <material name="orange">
    <color rgba="0.8 0.25 0 1"/>
  </material>
  <material name="yellow">
    <color rgba="0.8 0.8 0 1"/>
  </material>
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="dark_gray">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>
  <material name="gray">
    <color rgba="0.753 0.753 0.753 1"/>
  </material>
  <material name="silver">
    <color rgba="0.88 0.88 0.88 1"/>
  </material>
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <gazebo>
    <!-- Sail plugins  -->
    <plugin filename="libSailPlugin.so" name="main_sail_liftdrag">
      <a0>0.0</a0>
      <cla>6.2832</cla>
      <alpha_stall>0.1592</alpha_stall>
      <cla_stall>-0.7083</cla_stall>
      <cda>0.63662</cda>
      <area>1.81</area>
      <fluid_density>1.2</fluid_density>
      <forward>1 0 0</forward>
      <upward>0 1 0</upward>
      <cp>-0.30875 0 1.30625</cp>
      <link_name>main_sail_link</link_name>
      <radial_symmetry>true</radial_symmetry>
      <topic>lift_drag</topic>
    </plugin>
    <plugin filename="libSailPlugin.so" name="fore_sail_liftdrag">
      <a0>0.0</a0>
      <cla>6.2832</cla>
      <alpha_stall>0.1592</alpha_stall>
      <cla_stall>-0.7083</cla_stall>
      <cda>0.63662</cda>
      <area>1.43</area>
      <fluid_density>1.2</fluid_density>
      <forward>1 0 0</forward>
      <upward>0 1 0</upward>
      <cp>-0.605666667 0 1.20528</cp>
      <link_name>fore_sail_link</link_name>
      <radial_symmetry>true</radial_symmetry>
      <topic>lift_drag</topic>
    </plugin>
  </gazebo>
  <gazebo>
    <!-- ROS control -->
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <legacyModeNS>false</legacyModeNS>
    </plugin>
    <!-- Joint state publisher -->
    <!-- <plugin name="gazebo_ros_joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
            <robotNamespace>/</robotNamespace>
            <jointName>
                main_sail_joint, fore_sail_joint
            </jointName>
            <updateRate>50</updateRate>
            <alwaysOn>true</alwaysOn>
        </plugin> -->
    <!-- Hydrodynamics plugin -->
    <plugin filename="libHydrodynamicsPlugin.so" name="hydrodynamics">
      <!-- Wave Model -->
      <wave_model>ocean</wave_model>
      <!-- Hydrodynamics -->
      <damping_on>true</damping_on>
      <viscous_drag_on>true</viscous_drag_on>
      <pressure_drag_on>true</pressure_drag_on>
      <!-- Markers -->
      <markers>
        <update_rate>30</update_rate>
        <water_patch>false</water_patch>
        <waterline>false</waterline>
        <underwater_surface>false</underwater_surface>
      </markers>
    </plugin>
    <!-- Foil plugins  -->
    <plugin filename="libFoilPlugin.so" name="keel_fin_liftdrag">
      <a0>0.0</a0>
      <cla>6.2832</cla>
      <alpha_stall>0.1592</alpha_stall>
      <cla_stall>-0.7083</cla_stall>
      <cda>0.63662</cda>
      <area>0.17</area>
      <fluid_density>1000</fluid_density>
      <forward>1 0 0</forward>
      <upward>0 1 0</upward>
      <cp>0 0 0</cp>
      <link_name>keel_fin_link</link_name>
      <radial_symmetry>true</radial_symmetry>
      <topic>lift_drag</topic>
    </plugin>
    <plugin filename="libFoilPlugin.so" name="rudder_liftdrag">
      <a0>0.0</a0>
      <cla>6.2832</cla>
      <alpha_stall>0.1592</alpha_stall>
      <cla_stall>-0.7083</cla_stall>
      <cda>0.63662</cda>
      <area>0.12</area>
      <fluid_density>1000</fluid_density>
      <forward>1 0 0</forward>
      <upward>0 1 0</upward>
      <cp>-0.06 0 -0.2</cp>
      <link_name>rudder_link</link_name>
      <radial_symmetry>true</radial_symmetry>
      <topic>lift_drag</topic>
    </plugin>
  </gazebo>
  <!-- Camera Sensor -->
  <!-- <gazebo reference="cam_link">
    <sensor type="camera" name="camera1">
      <always_on>1</always_on>>
      <update_rate>30.0</update_rate>
      <camera name="camera1">
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>bbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>cam_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo> -->
  <!-- Ray Sensor -->
  <!-- <gazebo reference="ray_link">
    <sensor type="gpu_ray" name="ray1">
      <always_on>1</always_on>>
      <update_rate>40.0</update_rate>
      <visualize>true</visualize>
      <ray name="ray1">
        <scan>
          <horizontal>
            <samples>640</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
          <vertical>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>0</min_angle>
            <max_angle>0</max_angle>
          </vertical>

        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin name="ray_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/bbot/laser/scan</topicName>
        <frameName>ray_link</frameName>
      </plugin>
    </sensor>
  </gazebo> -->
  <!-- GPS Sensor -->
  <!-- <gazebo reference="gps_link">
    <sensor type="gps" name="gps1">
      <always_on>1</always_on>>
      <update_rate>100.0</update_rate>
      <visualize>true</visualize>
      <gps name="gps1">
      </gps>
    </sensor>
  </gazebo> -->
  <!-- The base link - the reference link for the entire model -->
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
      <material name="orange"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
    <!-- Remove inertial in base_link:
            [ WARN ] The root link base_link has an inertia specified in the URDF,
            but KDL does not support a root link with an inertia.
            As a workaround, you can add an extra dummy link to your URDF.
        -->
    <!--
        <xacro:solid_cuboid_inertial 
            rpy="0 0 0" xyz="0 0 0"
            mass="0.01"
            x="0.01" y="0.01" z="0.01" />
        -->
  </link>
  <gazebo reference="base_link">
    <material>Gazebo/Orange</material>
  </gazebo>
  <!-- Hull  -->
  <link name="hull_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rs750_description/meshes/rs750_hull.stl"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rs750_description/meshes/rs750_hull_collision_3.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="32.76800000000001"/>
      <inertia ixx="0.8081025706666668" ixy="0.0" ixz="0.0" iyy="16.757642581333343" iyz="0.0" izz="17.20783121066668"/>
    </inertial>
  </link>
  <gazebo reference="hull_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <joint name="hull_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="hull_link"/>
  </joint>
  <gazebo reference="hull_joint">
    </gazebo>
  <!-- Deck  (visual only) -->
  <link name="deck_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rs750_description/meshes/rs750_deck.stl"/>
      </geometry>
      <material name="dark_gray"/>
    </visual>
  </link>
  <gazebo reference="deck_link">
    <material>Gazebo/Gray</material>
  </gazebo>
  <joint name="deck_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="deck_link"/>
  </joint>
  <gazebo reference="deck_joint">
    </gazebo>
  <!-- Keel fin -->
  <link name="keel_fin_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rs750_description/meshes/rs750_keel_fin.stl"/>
      </geometry>
      <material name="yellow"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rs750_description/meshes/rs750_keel_fin_collision_2.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="8.192000000000002"/>
      <inertia ixx="0.5098595942400003" ixy="0.0" ixz="0.0" iyy="0.5207927466666669" iyz="0.0" izz="0.011436468906666669"/>
    </inertial>
  </link>
  <gazebo reference="keel_fin_link">
    <material>Gazebo/Yellow</material>
  </gazebo>
  <joint name="keel_fin_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.16255 0.0 -0.54053"/>
    <parent link="base_link"/>
    <child link="keel_fin_link"/>
  </joint>
  <!-- Preserve fixed joint as the keel_fin_link has an associated plugin -->
  <gazebo reference="keel_fin_joint">
    <disableFixedJointLumping>true</disableFixedJointLumping>
    <preserveFixedJoint>true</preserveFixedJoint>
  </gazebo>
  <!-- Keel bulb -->
  <link name="keel_bulb_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rs750_description/meshes/rs750_keel_bulb.stl"/>
      </geometry>
      <material name="yellow"/>
    </visual>
    <collision>
      <origin rpy="0 1.5707963267948966 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.6880000000000001" radius="0.048"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 1.5707963267948966 0" xyz="0 0 0"/>
      <mass value="42.59840000000001"/>
      <inertia ixx="1.7048447658666674" ixy="0.0" ixz="0.0" iyy="1.7048447658666674" iyz="0.0" izz="0.049073356800000016"/>
    </inertial>
  </link>
  <gazebo reference="keel_bulb_link">
    <material>Gazebo/Yellow</material>
  </gazebo>
  <joint name="keel_bulb_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.26638 0.0 -1.08674"/>
    <parent link="base_link"/>
    <child link="keel_bulb_link"/>
  </joint>
  <gazebo reference="keel_bulb_joint">
    </gazebo>
  <!-- Rudder -->
  <link name="rudder_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rs750_description/meshes/rs750_rudder.stl"/>
      </geometry>
      <material name="yellow"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rs750_description/meshes/rs750_rudder_collision_3.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="3.276800000000001"/>
      <inertia ixx="0.07168345156266669" ixy="0.0" ixz="0.0" iyy="0.07605671253333336" iyz="0.0" izz="0.004574587562666667"/>
    </inertial>
  </link>
  <gazebo reference="rudder_link">
    <material>Gazebo/Yellow</material>
  </gazebo>
  <joint name="rudder_joint" type="revolute">
    <origin rpy="0 0 0" xyz="-1.2436 0.0 -0.0487"/>
    <axis xyz="0 0 1"/>
    <limit effort="1000" lower="-1.5707963267948966" upper="1.5707963267948966" velocity="1000"/>
    <parent link="base_link"/>
    <child link="rudder_link"/>
  </joint>
  <transmission name="rudder_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="rudder_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="rudder_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <gazebo reference="rudder_joint">
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <!-- Mast (visual only) -->
  <link name="mast_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rs750_description/meshes/rs750_mast.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
  </link>
  <gazebo reference="mast_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="mast_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 2.09"/>
    <parent link="base_link"/>
    <child link="mast_link"/>
  </joint>
  <gazebo reference="mast_joint">
        </gazebo>
  <!-- Main sail -->
  <link name="main_sail_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rs750_description/meshes/rs750_main_sail.stl"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rs750_description/meshes/rs750_main_sail.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="3.276800000000001"/>
      <inertia ixx="2.265024823296001" ixy="0.0" ixz="0.0" iyy="2.3767722666666677" iyz="0.0" izz="0.11194876996266674"/>
    </inertial>
  </link>
  <gazebo reference="main_sail_link">
    <material>Gazebo/GreyTransparent</material>
  </gazebo>
  <joint name="main_sail_joint" type="revolute">
    <origin rpy="0 0 0" xyz="-0.02625 0.0 0.291875"/>
    <axis xyz="0 0 1"/>
    <limit effort="1000" lower="-1.5707963267948966" upper="1.5707963267948966" velocity="1000"/>
    <parent link="base_link"/>
    <child link="main_sail_link"/>
  </joint>
  <transmission name="main_sail_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="main_sail_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="main_sail_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <gazebo reference="main_sail_joint">
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <!-- Fore sail -->
  <link name="fore_sail_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rs750_description/meshes/rs750_fore_sail.stl"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rs750_description/meshes/rs750_fore_sail.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1.6384000000000005"/>
      <inertia ixx="0.6851199849813333" ixy="0.0" ixz="0.0" iyy="0.6990506666666668" iyz="0.0" izz="0.014031344981333344"/>
    </inertial>
  </link>
  <gazebo reference="fore_sail_link">
    <material>Gazebo/GreyTransparent</material>
  </gazebo>
  <joint name="fore_sail_joint" type="revolute">
    <origin rpy="0 0 0" xyz="1.03125 0.0 0.235625"/>
    <axis xyz="-0.271652766 0 0.962395332"/>
    <limit effort="1000" lower="-1.5707963267948966" upper="1.5707963267948966" velocity="1000"/>
    <parent link="base_link"/>
    <child link="fore_sail_link"/>
  </joint>
  <transmission name="fore_sail_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="fore_sail_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="fore_sail_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <gazebo reference="fore_sail_joint">
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <link name="anemometer_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.02"/>
      </geometry>
      <material name="green"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.02"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="3.0833333333333336e-06" ixy="0.0" ixz="0.0" iyy="3.0833333333333336e-06" iyz="0.0" izz="2.0000000000000003e-06"/>
    </inertial>
  </link>
  <gazebo reference="anemometer_link">
    <material>Gazebo/Green</material>
    <sensor name="anemometer_sensor" type="anemometer">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <topic>sensors/anemometer</topic>
      <plugin filename="libgazebo_ros_anemometer.so" name="anemometer_plugin">
        <robotNamespace>/</robotNamespace>
        <frameId>anemometer_link</frameId>
        <topicName>wind/apparent</topicName>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="anemometer_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 4.0"/>
    <parent link="base_link"/>
    <child link="anemometer_link"/>
  </joint>
  <gazebo reference="anemometer_joint">
    <!-- <preserveFixedJoint>true</preserveFixedJoint> -->
  </gazebo>
  <link name="imu_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.031 0.026 0.005"/>
      </geometry>
      <material name="green"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.031 0.026 0.005"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.004"/>
      <inertia ixx="2.3366666666666665e-07" ixy="0.0" ixz="0.0" iyy="3.2866666666666667e-07" iyz="0.0" izz="5.456666666666666e-07"/>
    </inertial>
  </link>
  <gazebo reference="imu_link">
    <material>Gazebo/Green</material>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <topic>sensors/imu</topic>
      <pose>0 0 0 0 0 0</pose>
      <imu>
        <topic>sensors/imu</topic>
      </imu>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <gaussianNoise>0.0</gaussianNoise>
        <always_on>true</always_on>
        <updateRateHZ>50</updateRateHZ>
        <topicName>sensors/imu</topicName>
        <bodyName>imu_link</bodyName>
        <frameName>imu_link</frameName>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="imu_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.01"/>
    <parent link="base_link"/>
    <child link="imu_link"/>
  </joint>
  <gazebo reference="imu_joint">
    <!-- <preserveFixedJoint>true</preserveFixedJoint> -->
  </gazebo>
  <link name="magnetic_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.031 0.026 0.005"/>
      </geometry>
      <material name="green"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.031 0.026 0.005"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.004"/>
      <inertia ixx="2.3366666666666665e-07" ixy="0.0" ixz="0.0" iyy="3.2866666666666667e-07" iyz="0.0" izz="5.456666666666666e-07"/>
    </inertial>
  </link>
  <!--
        <gazebo reference="magnetic_link">
            <sensor type="magnetometer" name="magnetic_sensor">
                <always_on>1</always_on>>
                <update_rate>100.0</update_rate>
                <visualize>true</visualize>
                <magnetometer name="mag">
                </magnetometer>
            </sensor>
        </gazebo>
        -->
  <gazebo>
    <plugin filename="libhector_gazebo_ros_magnetic.so" name="magnetic_plugin">
      <updateRate>10.0</updateRate>
      <bodyName>magnetic_link</bodyName>
      <frameId>magnetic_link</frameId>
      <topicName>sensors/magnetic</topicName>
      <offset>0 0 0</offset>
      <drift>0.0 0.0 0.0</drift>
      <gaussianNoise>1.3e-2 1.3e-2 1.3e-2</gaussianNoise>
    </plugin>
  </gazebo>
  <joint name="magnetic_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.01"/>
    <parent link="base_link"/>
    <child link="magnetic_link"/>
  </joint>
  <gazebo reference="magnetic_joint">
    <!-- <preserveFixedJoint>true</preserveFixedJoint> -->
  </gazebo>
  <link name="camera_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.031 0.026 0.005"/>
      </geometry>
      <material name="green"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.031 0.026 0.005"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.004"/>
      <inertia ixx="2.3366666666666665e-07" ixy="0.0" ixz="0.0" iyy="3.2866666666666667e-07" iyz="0.0" izz="5.456666666666666e-07"/>
    </inertial>
  </link>
  <joint name="camera_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
  </joint>
  <link name="camera_link_optical"/>
  <gazebo reference="camera_link">
    <material>Gazebo/Green</material>
    <sensor name="camera" type="camera">
      <always_on>1</always_on>
      &gt;
                
      <update_rate>30.0</update_rate>
      <camera name="camera">
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_plugin">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <frameName>camera_link_optical</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.5 0.0 0.3"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>
  <gazebo reference="camera_joint">
        </gazebo>
</robot>
